/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–ª–æ–π/—Ç—ë–º–Ω–æ–π —Ç–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ localStorage
 */

const THEME_STORAGE_KEY = 'theme-preference';
const THEMES = {
    LIGHT: 'light',
    DARK: 'dark'
};

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Ç–µ–º—ã
 */
export function initTheme() {
    const themeToggle = document.querySelector('.theme-toggle');
    if (!themeToggle) return;
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Ç–µ–º—É –∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    const savedTheme = loadTheme();
    applyTheme(savedTheme);
    updateThemeButton(themeToggle, savedTheme);
    
    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    themeToggle.addEventListener('click', () => toggleTheme(themeToggle));
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É –º–µ–∂–¥—É —Å–≤–µ—Ç–ª–æ–π –∏ —Ç—ë–º–Ω–æ–π
 * @param {HTMLElement} button - –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
 */
function toggleTheme(button) {
    const currentTheme = document.documentElement.getAttribute('data-theme') || THEMES.LIGHT;
    const newTheme = currentTheme === THEMES.LIGHT ? THEMES.DARK : THEMES.LIGHT;
    
    applyTheme(newTheme);
    saveTheme(newTheme);
    updateThemeButton(button, newTheme);
}

/**
 * –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É
 * @param {string} theme - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã ('light' –∏–ª–∏ 'dark')
 */
function applyTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme);
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
 * @param {HTMLElement} button - –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
 * @param {string} theme - –¢–µ–∫—É—â–∞—è —Ç–µ–º–∞
 */
function updateThemeButton(button, theme) {
    const icon = button.querySelector('.theme-icon');
    if (!icon) return;
    
    if (theme === THEMES.DARK) {
        icon.textContent = '‚òÄÔ∏è';
        button.setAttribute('aria-label', '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É');
        button.setAttribute('title', '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É');
    } else {
        icon.textContent = 'üåô';
        button.setAttribute('aria-label', '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ç—ë–º–Ω—É—é —Ç–µ–º—É');
        button.setAttribute('title', '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ç—ë–º–Ω—É—é —Ç–µ–º—É');
    }
}

/**
 * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ —Ç–µ–º—ã –≤ localStorage
 * @param {string} theme - –¢–µ–º–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
 */
function saveTheme(theme) {
    try {
        localStorage.setItem(THEME_STORAGE_KEY, theme);
    } catch (e) {
        console.warn('Failed to save theme to localStorage', e);
    }
}

/**
 * –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ —Ç–µ–º—ã –∏–∑ localStorage –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
 * @returns {string} –í—ã–±—Ä–∞–Ω–Ω–∞—è —Ç–µ–º–∞
 */
function loadTheme() {
    try {
    // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
        const savedTheme = localStorage.getItem(THEME_STORAGE_KEY);
        if (savedTheme === THEMES.LIGHT || savedTheme === THEMES.DARK) {
            return savedTheme;
        }
    } catch (e) {
        console.warn('Failed to load theme from localStorage', e);
    }
    
    // –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî —Å–∏—Å—Ç–µ–º–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return THEMES.DARK;
    }
    
    return THEMES.LIGHT;
}

/**
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
 */
export function watchSystemTheme() {
    if (!window.matchMedia) return;
    
    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
    
    mediaQuery.addEventListener('change', (e) => {
        // –ü—Ä–∏–º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª —Å–≤–æ—ë –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ
        try {
            const savedTheme = localStorage.getItem(THEME_STORAGE_KEY);
            if (!savedTheme) {
                const newTheme = e.matches ? THEMES.DARK : THEMES.LIGHT;
                applyTheme(newTheme);
                
                const themeToggle = document.querySelector('.theme-toggle');
                if (themeToggle) {
                    updateThemeButton(themeToggle, newTheme);
                }
            }
        } catch (err) {
            console.warn('Error handling system theme change', err);
        }
    });
}
