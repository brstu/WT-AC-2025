name: PR Restrictions Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, master]

jobs:
  check-pr-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR changes against restrictions
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            // Allowed paths from configuration
            const allowedPaths = [
              'README.md',
              'students/'
            ];

            // Check each changed file
            const forbiddenChanges = files.filter(file => {
              const filename = file.filename;
              
              // Check if file matches any allowed path
              const isAllowed = allowedPaths.some(allowedPath => {
                if (allowedPath.endsWith('/')) {
                  // Directory path - check if file starts with this path
                  return filename.startsWith(allowedPath);
                } else if (allowedPath.includes('**')) {
                  // Pattern with wildcards - simple implementation
                  const pattern = allowedPath.replace('**', '.*');
                  return new RegExp(pattern).test(filename);
                } else {
                  // Exact file match
                  return filename === allowedPath;
                }
              });
              
              return !isAllowed;
            });

            if (forbiddenChanges.length > 0) {
              const forbiddenFiles = forbiddenChanges.map(f => f.filename).join('\n- ');
              
              core.setFailed(`üö´ PR —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö:\n\n- ${forbiddenFiles}\n\n–†–∞–∑—Ä–µ—à–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤:\n- README.md\n- –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ students/ –∏ –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–º\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ maintainer-–∞–º –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤.`);
              
              // Optionally add a comment to the PR
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `‚ùå **PR Check Failed**\n\n–≠—Ç–æ—Ç PR —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö:\n\`\`\`\n${forbiddenFiles}\n\`\`\`\n\n**–†–∞–∑—Ä–µ—à–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤:**\n- \`README.md\`\n- –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ \`students/\` –∏ –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–º\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ—Ä–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ –∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ maintainer-–∞–º.`
              });
            } else {
              console.log('‚úÖ PR —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö');
            }