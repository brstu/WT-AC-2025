name: Lab01 Review with Copilot

on:
  # pull_request:
  #   branches: [main]
  #   paths:
  #     - 'students/**/task_01/**'
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request number to review'
        required: true
        type: number

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && format('refs/pull/{0}/head', github.event.inputs.pr_number) || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Use CI tooling from main
        run: |
          git fetch --no-tags --depth=1 origin main
          rm -rf tools/ci
          git checkout origin/main -- tools/ci

      - name: Install dependencies
        run: |
          cd tools/ci
          npm i --no-audit --no-fund

      - name: Detect student task
        id: detect
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            git fetch --no-tags --depth=1 origin main
            base_sha=origin/main
            head_sha=${{ github.sha }}
          else
            base_sha=${{ github.event.pull_request.base.sha }}
            head_sha=${{ github.sha }}
          fi
          paths=$(git diff --name-only $base_sha...$head_sha | grep -E '^students/[^/]+/task_01/' | cut -d/ -f1-3 | sort -u || true)
          if [ -z "$paths" ]; then
            echo "No task_01 changes"
            exit 0
          fi
          student_task=$paths
          echo "student_task=$student_task" >> $GITHUB_OUTPUT

      - name: Run review
        run: |
          node tools/ci/src/review-runner.mjs --student-task ${{ steps.detect.outputs.student_task }}

      - name: Comment PR with review
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.pr_number || github.event.number }}
        with:
          script: |
            const fs = require('fs');
            const review = fs.existsSync('review.md') ? fs.readFileSync('review.md', 'utf8') : 'No review';
            const prNumber = parseInt(process.env.PR_NUMBER);
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: review
            });