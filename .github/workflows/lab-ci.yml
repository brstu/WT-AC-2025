name: Universal Lab Check and Grading

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'students/**'
      - 'tasks/**'
      - 'tools/ci/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  lab-check:
    runs-on: ubuntu-latest
    env:
      # Thresholds
      A11Y_MIN: '90'
      BP_MIN: '90'
      # Optional: MCP (Model Context Protocol) external AI server
      MCP_SERVER_URL: ${{ secrets.MCP_SERVER_URL }}
      MCP_API_KEY: ${{ secrets.MCP_API_KEY }}
      # Score threshold to fail CI (adjust per policy)
      SCORE_MIN: '50'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CI tool dependencies
        run: |
          cd tools/ci
          npm i --no-audit --no-fund

      - name: Detect changed student tasks
        id: detect
        shell: bash
        run: |
          base_ref="${{ github.base_ref }}"
          if [ -z "$base_ref" ]; then base_ref="main"; fi
          git fetch --no-tags --depth=1 origin "$base_ref"
          paths=$(git diff --name-only origin/$base_ref...${{ github.sha }} | grep -E '^students/[^/]+/task_[0-9]{2}/' | cut -d/ -f1-3 | sort -u || true)
          if [ -z "$paths" ]; then
            echo "no_tasks=true" >> $GITHUB_OUTPUT
            echo "paths=[]" >> $GITHUB_OUTPUT
          else
            json=$(node -e "const fs=require('fs'); const s=fs.readFileSync(0,'utf8').trim().split(/\n/).filter(Boolean); process.stdout.write(JSON.stringify(s));" <<< "$paths")
            echo "paths=$json" >> $GITHUB_OUTPUT
            echo "no_tasks=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip if nothing to check
        if: steps.detect.outputs.no_tasks == 'true'
        run: echo "No student tasks changed. Skipping checks."

      - name: Run universal checks and grading
        if: steps.detect.outputs.no_tasks != 'true'
        run: |
          node tools/ci/src/check-runner.mjs \
            --paths '${{ steps.detect.outputs.paths }}' \
            --a11y-min $A11Y_MIN \
            --bp-min $BP_MIN \
            --mcp-url "$MCP_SERVER_URL" \
            --mcp-key "$MCP_API_KEY"

      - name: Upload lab reports
        if: steps.detect.outputs.no_tasks != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: lab-reports
          path: |
            tools/ci/out/**

      - name: Comment PR with summary
        if: steps.detect.outputs.no_tasks != 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const summaryPath = 'tools/ci/out/summary.md';
            const body = fs.existsSync(summaryPath) ? fs.readFileSync(summaryPath, 'utf8') : 'No summary available';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });

      - name: Fail if any score below threshold
        if: steps.detect.outputs.no_tasks != 'true'
        run: |
          thresh=${SCORE_MIN}
          if [ -f tools/ci/out/grades.json ]; then
            bad=$(jq -r --argjson t "$thresh" '.[] | select(.score < $t) | "\(.student) \(.task): \(.score)"' tools/ci/out/grades.json)
            if [ -n "$bad" ]; then
              echo "Tasks below threshold ($thresh):"; echo "$bad"; exit 1;
            fi
          fi
